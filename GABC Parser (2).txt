final char[] cStaffpos = new char[]{'B','A','0','1','2','3','4','5','6','7','8','9','Z'};

private int staffPosToInt(char in)
{
	int x = in;
	if(x > 96 && x < 110) x += -99;
	else x = -99;
	return x;
}

private boolean rhombus(char in)
{
	boolean rhombus;
	int x = in;
	if(x > 64 && x < 78) rhombus = true;
	else rhombus = false;
	return true;
}

read in all staffPos

12
1, 2       = podatus
2, 1       = clivis

112
1, 2, 1    = connected puncti

122
2, 1, 2    = porrectus

123
1, 2, 3    = 
1, 3, 2    =
2, 1, 3    = 
2, 3, 1    =
3, 1, 2    = 
3, 2, 1    = 

1122
1, 2, 1, 2 = 
2, 1, 2, 1 = 

1123
1, 2, 1, 3 = 
1, 2, 3, 1 = 
1, 3, 1, 2 = 
1, 3, 2, 1 = 
2, 1, 3, 1 = 
3, 1, 2, 1 = 

1223
1, 2, 3, 2 = 
2, 1, 2, 3 = 
2, 1, 3, 2 = 
2, 3, 1, 2 = 
2, 3, 2, 1 = 
3, 2, 1, 2 = 

1233
1, 3, 2, 3 = 
2, 3, 1, 3 = 
3, 1, 2, 3 = 
3, 1, 3, 2 = 
3, 2, 1, 3 = 
3, 2, 3, 1 = 

1234
1, 2, 3, 4 = 
1, 2, 4, 3 = 
1, 3, 2, 4 = 
1, 3, 4, 2 = 
1, 4, 2, 3 = 
1, 4, 3, 2 = 
2, 1, 3, 4 = 
2, 1, 4, 3 = 
2, 3, 1, 4 = 
2, 3, 4, 1 = 
2, 4, 1, 3 = 
2, 4, 3, 1 = 
3, 1, 2, 4 = 
3, 1, 4, 2 = 
3, 2, 1, 4 = 
3, 2, 4, 1 = 
3, 4, 1, 2 = 
3, 4, 2, 1 = 
4, 1, 2, 3 = 
4, 1, 3, 2 = 
4, 2, 1, 3 = 
4, 2, 3, 1 = 
4, 3, 1, 2 = 
4, 3, 2, 1 = 

12345 xqwertx 
12354 xqwetrx 
12435 xqwretx 
12453 xqwrtex 
12


try this
(c4) Test 12(fg) 21(gf) 121(fgf) 212(gfg) 321(fgh) 132(fhg) 213(gfh) 231(ghf) 312(hfg) 321(hgf) 1212(fgfg) 2121(gfgf) 1213(fgfh) 1231(fghf) 1312(fhfg) 1321(fhgf) 2131(gfhf) 3121(hfgf) 1232(fghg) 2123(gfgh) 2132(gfhg) 2312(ghfg) 2321(ghgf) 3212(hgfg) 1323(fhgh) 2313(ghfh) 3123(hfgh) 3132(hfhg) 3213(hgfh) 3231(hghf) 1234(fghi) 1243(fgih) 1324(fhgi) 1342(fhig) 1423(figh) 1432(fihg) 2134(gfhi) 2143(gfih) 2314(ghfi) 2341(ghif) 2413(gifh) 2431(gihf) 3124(hfgi) 3142(hfig) 3214(hgfi) 3241(hgif) 3412(hifg) 3421(higf) 4123(ifgh) 4132(ifhg) 4213(igfh) 4231(ighf) 4312(ihfg) 4321(ihgf)

characters that separate sub-neumes:
	Add to cur, start new:
		! ' / . v x (space)
	Make New:
		(Capital) (staffPos same as prev)


GABCNeume
____________________________
+ GABCSubNeume[] subNeumes
- String out
- String in
+ int[] staffPos ???  (this will include flats as separate neume???)
----------------------------
GABCNeume(String)
GABCSubNeume[] gABCToSubNeumes(String)
String getOutput()
String getInput()


GABCNeume(String gabc)
{
	in = gabc;
	out = "";
	int[] staffPosTemp = new int[in.length()];
	int index = 0
	subNeumes = gABCToSubNeumes(in);
	for(int k = 0: k < subNeumes.length(); k++)
	{
		out += subNeumes[k].getOutput();
		for(int k2 = 0; k2 < subNeumes[k].staffPos.length(); k2++)
		{
			staffPosTemp[index] = subNeumes[k].staffPos[k2];
			index++;
		}
	}

	// reassign final staffPos array
	staffPos = new int[index]
	for(int k = 0; k < index; k++) staffPos[k] = staffPosTemp[k];
	
}

private GABCSubNeume[] gABCToSubNeumes(String in)
{
	String[] subData = in.length();
	char[] data = in.toCharArray();
	char cur, prev = '!';
	boolean startNew = false, makeNextNew = false;
	boolean allowDouble = false, addSpaceToPrev = false;
	int index = 0;
	int k = 0;
	while(k < data.length())
	{
		cur = data[k];
		if(k > 0) prev = data[k - 1];
		if(rhombus(cur))
		{
			if(!makeNextNew) startNew = true;
			allowDouble = false;
			makeNextNew = false;
		}
		else if(staffPosToInt(cur) == -99)
		{
			switch (cur) {
			case: '!'
			case: '\''
			case: '/'
			case: '.'
			case: ' '
				if(allowDouble) index--;
				allowDouble = true;
			case: 'v'
			case: 'x'
				makeNextNew = true;
				break;
			default:
				break;
			}

		}
		else if(staffPosToInt(cur) == staffPosToInt(prev))
		{
			addSpaceToPrev = true;
			startNew = true;
			allowDouble = false;
			makeNextNew = false;	
		}

		if(addSpaceToPrev)
		{
			subData[index] += "/";
			addSpaceToPrev = false;
		}
		if(startNew && k > 0) index++;
		startNew = false;
		subData[index] += cur;
		if(makeNextNew) index++;
		k++;
	}
	if(makeNextNew) index--;

	GABCSubNeumes[] subNeumes = new GABCSubNeumes[index + 1];
	for(int k = 0; k < index + 1; k++)
	{
		subNeumes[k] = new GABCSubNeume(subData[k]);
	}

	return subNeumes;	
}




GABCSubNeume
____________________________
- String out
- String in
+ int[] staffPos ???
----------------------------
GABCSubNeume(String)
String getOutput()
String getInput()

GABCSubNeume(String gabc)
{
	in = gabc;
	char[] data = in.toCharArray();
	char[] type = new char[in.length()];
	staffPos = new int[in.length()];
	if(rhombus(data[0]))
	{
		int x = data[0];
		x += -32;
		staffPos[0] = staffPosToInt(data[0]);
		type[0] = 'n'; // n for rhombus
		out = staffPos[0] + type[0];
	}
		
		
}

Hmmmm
separate into
-tones/staffpos
-type
-punctuation
-spacing


public String getOutput()
{
	return out;
}

public String getInput()
{
	return in;
}

























